let F_zk = lam A, R, S .
  let ('Prove, x, w, B) = rd ?p2f in
    wr ((A, B, x, R x w), S) -> ?f2p ;
    let 'ok = rd ?p2f in
      wr (('Verified, A, x, R x w), B) -> ?f2p
in
  nu f2p, p2f .
    let A = 666 in
    let R = lam x, w . true in
    let S = 999 in
      |> (F_zk A R S) ;
      |> (wr ('Prove, 0, 0, 0) -> p2f ;
          let _ = rd f2p in
          wr 'ok -> p2f ;
          let (('Verified, _, _, r), _) = rd f2p
	  in r)
