(* SaUCy prelude *)
let sendDelayed = lam f, m, R, ?a2f, ?f2a, ?f2p .
  wr f (m, R) -> ?f2a ;
  match rd ?a2f with 'ok in
    wr (m, R) -> ?f2p
in 

(* User-defined leakage *)
let leak = lam x . match x with (('Sent, msg), R) in
  (('Sent, length msg), R)
in

(* Actual process *)
nu a2f, f2a, f2p .
  let ?a2f, ?f2a, ?f2p = a2f, f2a, f2p in
    sendDelayed leak ('Sent, "hi") 1
